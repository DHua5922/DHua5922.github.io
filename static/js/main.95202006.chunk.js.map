{"version":3,"sources":["components/project/Project.js","components/portfolio/ProjectList.js","components/portfolio/Portfolio.js","components/contact/InputGroup.js","components/contact/Contact.js","serviceWorker.js","components/views/IconLink.js","components/Footer.js","components/Navbar.js","sections/About.js","index.js"],"names":["Project","props","state","show","console","log","this","project","Modal","onHide","toggleClickedProject","centered","Header","closeButton","Title","id","name","Body","type","style","float","startDate","endDate","Container","fluid","className","Image","width","src","imgName","description","Footer","links","map","link","url","label","href","rel","target","Button","variant","Component","projectsList","Portfolio","clickedProject","showProject","setState","Row","Col","xs","sm","lg","Card","onClick","Img","InputGroup","as","placeholder","required","Form","Group","Label","Control","Contact","action","method","validated","Boolean","window","location","hostname","match","IconLink","icon","StyledFooter","styled","div","Navbar","collapseOnSelect","expand","bg","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","Section","section","h1","Description","p","About","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95202006.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Project.scss';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nexport class Project extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: this.props.show\n        }\n    }\n\n    render() {\n        console.log(this.props.project);\n        return(\n            <Modal\n                show={this.state.show}\n                onHide={() => this.props.toggleClickedProject(false)}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {this.props.project.name}<br></br>\n                    </Modal.Title>\n                </Modal.Header>\n                    \n                <Modal.Body>\n                    <small>\n                        {this.props.project.type}\n                        <span style={{float: \"right\"}}>\n                            { this.props.project.startDate === this.props.project.endDate ? \n                                this.props.project.startDate :\n                                `${this.props.project.startDate} - ${this.props.project.endDate}`\n                            }\n                        </span>\n                    </small>\n                    <Container fluid className=\"media-container\">\n                        <Image \n                            style={{width: \"50%\"}}\n                            src={`images/${this.props.project.imgName}`} />\n                    </Container>\n                    <p>{this.props.project.description}</p>        \n                </Modal.Body>\n\n                <Modal.Footer>\n                    { \n                        this.props.project.links.map(link => {\n                            const { url, label } = link;\n                            return (\n                                <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n                                    <Button variant=\"primary\">{label}</Button>\n                                </a>\n                            );\n                        }) \n                    }\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","export const projectsList = [\n    {\n        name: \"Service Catalog\",\n        imgName: \"img_service_catalog.png\",\n        links: [{\n            url: \"https://www.utdallas.edu/oit/services/\",\n            label: \"Website\"\n        }],\n        description: `\n            As a Junior Web Portal UI Developer, I worked with 2 developers to create a service catalog website that lets \n            over 20,000 students at UT Dallas use the IT services offered by the Office of Information Technology.\n\n            For my part, I worked on the front-end using React.js, HTML, and CSS by displaying services from Cherwell REST API \n            on the sidebar and arranging the website in a way that will make the services easy to find. This website was \n            deployed to WordPress.\n\n            I also maintain this website by changing or adding necessary features to make the website more useful.\n        `,\n    },\n    {\n        name: \"CMovie\",\n        imgName: \"img_cmovie.png\",\n        links: [\n            {\n                url: \"https://www.huadylan.com/CMovie/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/CMovie\",\n                label: \"Code\"\n            },\n        ],\n        description: `\n            This website was built with React to make it easier to search for movies to watch.\n        `,\n    },\n    {\n        name: \"Stock Predictor\",\n        imgName: \"img_stock.jpg\",\n        links: [\n            {\n                url: \"https://stock-decider.herokuapp.com/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/StockPredictionMW2-4\",\n                label: \"Code\"\n            }\n        ],\n        description: `\n            In a Scrum team of 5, I built a stock predictor website that decides whether a stock is good or bad depending on the headlines. Throughout this internship, I added features, such as displaying stock quote from Finnhub API, for the website based on the tickets from Jira. I also improved code from pull requests and reported my progress in bi-weekly stand up meetings. The front-end was created with React, HTML, and CSS. The back-end was created with Node.js and Express. Stock data was retrieved from Finnhub's API.\n        `,\n    },\n    {\n        name: \"Chatterus\",\n        imgName: \"img_chatterus.jpg\",\n        links: [\n            {\n                url: \"https://chatterus.herokuapp.com/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/chatterus-frontend\",\n                label: \"Front End Code\"\n            },\n            {\n                url: \"https://github.com/DHua5922/chatterus-backend\",\n                label: \"Back End Code\"\n            },\n        ],\n        description: `\n            This website allows users to chat with each other. The website was built with MERN stack (MongoDB, Express, Node.js, and React).\n        `\n    },\n    {\n        name: \"newsgen\",\n        imgName: \"img_news.jpg\",\n        links: [\n            {\n                url: \"https://github.com/DHua5922/newsgen-frontend\",\n                label: \"Front End Code\",\n            },\n            {\n                url: \"https://github.com/DHua5922/newsgen-backend\",\n                label: \"Back End Code\",\n            },\n        ],\n        description: `\n            Website for marking favorite news. Project was managed using ClickUp's Agile features.\n            Front end was built with Next.js as React framework and styled with HTML, CSS, Tailwind, and Styled components.\n            Back end was built with Java, Spring Boot, and MySQL.\n        `\n    },\n]","import React, {Component} from 'react';\nimport {Project} from '../project/Project';\nimport './Portfolio.scss';\nimport {projectsList} from './ProjectList';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nexport class Portfolio extends Component {\n    state = {\n        clickedProject: null,\n        showProject: false\n    };\n\n    toggleClickedProject = (showProject) => {\n\t\tthis.setState({\n\t\t\tshowProject: showProject\n\t\t});\n\t}\n\n    render() {\n        return (\n            <section id=\"portfolio\">\n                <h1 className=\"header\"><b>Portfolio</b></h1>\n                <Row>\n                    {projectsList.map(project => (\n                        <Col className=\"project-col\" xs=\"12\" sm=\"6\" lg=\"4\">\n                            <Card className=\"project-display\" onClick={() => this.setState({clickedProject: project}, this.toggleClickedProject(true))}>\n                                <Card.Img className=\"img\" src={`images/${project.imgName}`}/>      \n                                <Card.Body className=\"label\">   \n                                    <Card.Title className=\"name\">{project.name}</Card.Title>  \n                                </Card.Body>    \n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n                {this.state.showProject &&\n                    <Project \n                        toggleClickedProject={this.toggleClickedProject} \n                        show={this.state.showProject} \n                        project={this.state.clickedProject} />\n                }           \n            </section>\n        );   \n    }\n}","import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport './InputGroup.scss';\n\nexport class InputGroup extends Component {\n    render() {\n        const {label, name, type, as, placeholder, required} = this.props;\n\n        return(      \n            <Form.Group>\n                { required ?\n                    (\n                        <>\n                            <Form.Label>{label}</Form.Label>\n                            <Form.Control name={name} type={type} as={as} placeholder={placeholder} required></Form.Control>\n                        </>\n                    ) : \n                    (\n                        <>\n                            <Form.Label>{label}</Form.Label>\n                            <Form.Control name={name} type={type} as={as} placeholder={placeholder}></Form.Control>\n                        </>\n                    )\n                }\n                \n            </Form.Group>\n        );\n    }\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './Contact.scss';\nimport {InputGroup} from './InputGroup';\n\nexport function Contact() {\n    return(\n        <section id=\"contact\">                \n            <Form \n                action=\"https://formspree.io/hua.dylan@gmail.com\"\n                method=\"POST\"\n                validated\n            >\n                <h2 id=\"title\">Contact Me</h2>\n                \n                <InputGroup\n                    required={true}\n                    label=\"Name\"\n                    name=\"name\"\n                    type=\"text\"\n                    as=\"input\"\n                    placeholder=\"Enter name\"\n                />\n\n                <InputGroup\n                    required={true}\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    as=\"input\"\n                    placeholder=\"Enter email\"\n                />  \n\n                <InputGroup\n                    required={true}\n                    label=\"Subject\"\n                    name=\"subject\"\n                    type=\"text\"\n                    as=\"input\"\n                    placeholder=\"Enter what message is about\"\n                />  \n\n                <InputGroup\n                    required={true}\n                    label=\"Message\"\n                    name=\"message\"\n                    type=\"text\"\n                    as=\"textarea\"\n                    placeholder=\"Enter message\"\n                />      \n\n                <Button type=\"submit\">Submit</Button>\n            </Form>  \n        </section>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nexport function IconLink({ link, icon }) {\n    return (\n        <a href={link} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\">\n                {icon}\n        </a>\n    );\n}","import tw, { styled } from 'twin.macro';\nimport React from \"react\";\nimport { IconLink } from './views/IconLink';\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { AiFillGithub } from \"react-icons/ai\";\n\nconst StyledFooter = styled.div`\n    ${tw`sticky bottom-0 bg-black justify-between flex px-7 py-3 items-center text-white`}\n`;\n\nexport default function Footer() {\n    return (\n        <StyledFooter>\n            <div>Made by Dylan Hua</div>\n            <div tw=\"flex text-3xl\">\n                <IconLink \n                    link=\"https://www.linkedin.com/in/dylanhua/\"\n                    icon={<FaLinkedin tw=\"text-white\" />} />\n                <div tw=\"px-2\" />\n                <IconLink \n                    link=\"https://github.com/DHua5922\"\n                    icon={<AiFillGithub tw=\"text-white\" />} />\n            </div>\n        </StyledFooter>\n    )\n}","import { Navbar as BNavbar, Nav } from 'react-bootstrap';\nimport React from \"react\";\n\nconst links = [\n    {\n        href: \"#about\",\n        label: \"About Me\"\n    },\n    {\n        href: \"#portfolio\",\n        label: \"Portfolio\"\n    },\n    {\n        href: \"#contact\",\n        label: \"Contact Me\"\n    },\n];\n\nexport default function Navbar() {\n    return (\n        <BNavbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\n            <BNavbar.Brand href=\"#about\">Dylan Hua</BNavbar.Brand>\n            <BNavbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <BNavbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"ml-auto mr-auto\">\n                    {\n                        links.map(link => {\n                            const { href, label } = link;\n                            return <Nav.Link href={href}>{label}</Nav.Link>;\n                        })\n                    }\n                </Nav>\n            </BNavbar.Collapse>\n        </BNavbar>\n    );\n}","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport tw, { styled } from \"twin.macro\";\n\nconst Section = styled.section`\n    padding: 60px 10vw;\n    ${tw`bg-white text-black`}\n`;\n\nconst Header = styled.h1`\n    ${tw`text-4xl text-center mb-8 font-bold`}\n`;\n\nconst Row = styled.div`\n    ${tw`justify-center block md:flex`}\n`;\n\nconst Description = styled.p`\n    ${tw`text-xl`}\n`;\n\nexport default function About() {\n    return (\n        <Section id=\"about\">\n            <Header>About</Header>\n            <Row>\n                <Image tw=\"block mx-auto\" src=\"images/img_me.jpg\"/>\n                <div tw=\"p-5\" />\n                <Description>\n                    As Web Portal UI Developer, I have experience in front end development with React, HTML, and CSS. I was also a software developer intern for Codubee in which I gained full stack development experience using Node.js and React.\n                </Description>\n            </Row>\n        </Section>\n    ); \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Portfolio} from './components/portfolio/Portfolio';\nimport {Contact} from './components/contact/Contact';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.scss\";\nimport Footer from './components/Footer';\nimport \"tailwindcss/tailwind.css\";\nimport Navbar from './components/Navbar';\nimport About from './sections/About';\n\nconst routing = (\n    <main>\n        <Navbar />\n        <About />\n        <Portfolio />\n        <Contact />\n        <Footer />\n    </main>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}