{"version":3,"sources":["serviceWorker.js","global.js","components/Navbar.js","components/views/Section.js","sections/About.js","ProjectList.js","components/views/NewTabLink.js","components/views/Project.js","components/views/AnimatedGrid.js","sections/Portfolio.js","sections/Contact.js","index.js"],"names":["Boolean","window","location","hostname","match","linkedinUrl","SNavbar","styled","BNavbar","NavLink","children","rest","Nav","Link","rel","target","Navbar","left","label","useScrollSection","right","url","icon","collapseOnSelect","expand","variant","sticky","Toggle","aria-controls","Collapse","id","className","map","link","index","href","Section","animateIn","duration","Container","Name","h1","Description","About","props","projectsList","name","imgName","links","description","NewTabLink","ModalHeader","Modal","Header","ModalBody","Body","ModalFooter","Project","project","open","useState","show","setShow","useEffect","onHide","centered","closeButton","Title","src","AnimatedGrid","columnWidth","size","width","gutterWidth","gutterHeight","ProjectDisplay","Card","ProjectImage","Img","Portfolio","clickedProject","setClickedProject","onClick","div","Contact","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e9fe8ec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const linkedinUrl = \"https://www.linkedin.com/in/dylanhua/\";\n\nexport { linkedinUrl };","import { Navbar as BNavbar, Nav } from 'react-bootstrap';\nimport React from \"react\";\nimport tw, { styled } from \"twin.macro\";\nimport { useScrollSection } from 'react-scroll-section';\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { AiFillGithub } from \"react-icons/ai\";\nimport { linkedinUrl } from '../global';\n\nfunction useLinks() {\n    return {\n        left: [\n            {\n                label: \"About\",\n                ...useScrollSection('about')\n            },\n            {\n                label: \"Portfolio\",\n                ...useScrollSection('portfolio')\n            },\n            {\n                label: \"Contact\",\n                ...useScrollSection('contact')\n            },\n        ],\n        right: [\n            {\n                url: linkedinUrl,\n                icon: <FaLinkedin tw=\"text-white text-3xl\" />,\n            },\n            {\n                url: \"https://github.com/DHua5922\",\n                icon: <AiFillGithub tw=\"text-white text-3xl\" />,\n            },\n        ],\n    };\n}\n\nconst SNavbar = styled(BNavbar)`\n    ${tw`bg-black`}\n`;\n\nfunction NavLink({ children, ...rest }) {\n    return (\n        <Nav.Link\n            rel=\"noopener noreferrer\" \n            target=\"_blank\"\n            {...rest}\n        >\n            {children}\n        </Nav.Link>\n    );\n}\n\nexport default function Navbar() {\n    const { left, right } = useLinks();\n    return (\n        <SNavbar collapseOnSelect expand=\"lg\" variant=\"dark\" sticky=\"top\">\n            <BNavbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <BNavbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {\n                        left.map((link, index) => {\n                            const { label, ...rest } = link;\n                            return (\n                                <NavLink \n                                    key={index} \n                                    {...rest}\n                                >\n                                    {label}\n                                </NavLink>\n                            );\n                        })\n                    }\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    {\n                        right.map((link, index) => {\n                            const { url, icon } = link;\n                            return (\n                                <NavLink \n                                    key={index}\n                                    href={url}\n                                >\n                                    {icon}\n                                </NavLink>\n                            );\n                        })\n                    }\n                </Nav>\n            </BNavbar.Collapse>\n        </SNavbar>\n    );\n}","import ScrollAnimation from \"react-animate-on-scroll\";\nimport React from \"react\";\nimport \"animate.css/animate.compat.css\";\nimport { Section as ScrollSection } from 'react-scroll-section';\n\nexport default function Section({ children, ...rest }) {\n    return (\n        <ScrollSection {...rest}>\n            <ScrollAnimation \n                animateIn=\"fadeIn\" \n                duration={0.5} \n            >\n                {children}\n            </ScrollAnimation>\n        </ScrollSection>\n    );\n}","import React from 'react';\nimport tw, { styled } from \"twin.macro\";\nimport Section from '../components/views/Section';\n\nconst Container = styled(Section)`\n    padding: 40vh 10vw;\n    ${tw`bg-white text-black`}\n`;\n\nconst Name = styled.h1`\n    ${tw`text-7xl mb-12 text-center`}\n`;\n\nconst Description = styled.h1`\n    max-width: 800px;\n    ${tw`text-lg m-auto`}\n`;\n\nexport default function About({ ...props }) {\n    return (\n        <Container {...props}>\n            <Name>Dylan Hua</Name>\n            <Description>\n                I am a front end developer who loves to make beautiful applications like the slick React website that helped over 20,000 users\n                request IT services. Making a website that evaluates a stock using React and Node.js helped me gain full stack development experience. \n                To continue honing my skills and learn new things, I take on personal projects on my free time.\n            </Description>\n        </Container>\n    ); \n}","const projectsList = [\n    {\n        name: \"Service Catalog\",\n        imgName: \"img_service_catalog.png\",\n        links: [{\n            url: \"https://www.utdallas.edu/oit/services/\",\n            label: \"Website\"\n        }],\n        description: `\n            As a Junior Web Portal UI Developer, I worked with 2 developers to create a service catalog website that lets \n            over 20,000 students at UT Dallas use the IT services offered by the Office of Information Technology.\n\n            For my part, I worked on the front-end using React.js, HTML, and CSS by displaying services from Cherwell REST API \n            on the sidebar and arranging the website in a way that will make the services easy to find. This website was \n            deployed to WordPress.\n\n            I also maintain this website by changing or adding necessary features to make the website more useful.\n        `,\n    },\n    {\n        name: \"CMovie\",\n        imgName: \"img_cmovie.png\",\n        links: [\n            {\n                url: \"https://www.huadylan.com/CMovie/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/CMovie\",\n                label: \"Code\"\n            },\n        ],\n        description: `\n            This website was built with React to make it easier to search for movies to watch.\n        `,\n    },\n    {\n        name: \"Chatterus\",\n        imgName: \"img_chatterus.jpg\",\n        links: [\n            {\n                url: \"https://chatterus.herokuapp.com/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/chatterus-frontend\",\n                label: \"Front End Code\"\n            },\n            {\n                url: \"https://github.com/DHua5922/chatterus-backend\",\n                label: \"Back End Code\"\n            },\n        ],\n        description: `\n            This website allows users to chat with each other. The website was built with MERN stack (MongoDB, Express, Node.js, and React).\n        `\n    },\n    {\n        name: \"newsgen\",\n        imgName: \"img_news.jpg\",\n        links: [\n            {\n                url: \"https://newsgen.herokuapp.com/\",\n                label: \"Website\"\n            },\n            {\n                url: \"https://github.com/DHua5922/newsgen-frontend\",\n                label: \"Front End Code\",\n            },\n            {\n                url: \"https://github.com/DHua5922/newsgen-backend\",\n                label: \"Back End Code\",\n            },\n        ],\n        description: `\n            Website for marking favorite news. Project was managed using ClickUp's Agile features.\n            Front end was built with Next.js as React framework and styled with HTML, CSS, Tailwind, and Styled components.\n            Back end was built with Java, Spring Boot, and MySQL.\n        `\n    },\n];\n\nexport default projectsList;","export default function NewTabLink({ children, ...props }) {\n    return (\n        <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            {...props}\n        >\n            {children}\n        </a>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport tw, { styled } from \"twin.macro\";\nimport NewTabLink from './NewTabLink';\n\nconst ModalHeader = styled(Modal.Header)`\n    ${tw`border-b-0`}\n`;\n\nconst ModalBody = styled(Modal.Body)`\n    ${tw`py-0`}\n`;\n\nconst ModalFooter = styled(Modal.Header)`\n    ${tw`border-t-0 justify-center`}\n`;\n\nexport default function Project({ project }) {\n    const { open, name, imgName, description, links } = project;\n    const [show, setShow] = useState(open);\n    \n    useEffect(() => setShow(open), [project, open]);\n\n    return(\n        <Modal\n            show={show}\n            onHide={() => setShow(false)}\n            centered\n        >\n            <ModalHeader closeButton>\n                <Modal.Title>\n                    {name}<br />\n                </Modal.Title>\n            </ModalHeader>\n                \n            <ModalBody>\n                <Image \n                    tw=\"w-1/2 block mx-auto mb-5\"\n                    src={`images/${imgName}`} />\n                <div>{description}</div>        \n            </ModalBody>\n\n            <ModalFooter>\n                { \n                    links.map((link, index) => {\n                        const { url, label } = link;\n                        return (\n                            <NewTabLink \n                                key={index}\n                                href={url} \n                            >\n                                <Button variant=\"primary\" tw=\"m-1\">{label}</Button>\n                            </NewTabLink>\n                        );\n                    }) \n                }\n            </ModalFooter>\n        </Modal>\n    );\n}","import { SizeMe } from 'react-sizeme';\nimport StackGrid from \"react-stack-grid\";\nimport React from \"react\";\n\nexport default function AnimatedGrid({ children }) {\n    return (\n        <SizeMe>\n            {({ size }) => {    \n                const { width } = size;\n\n                // initially 2 columns\n                let columnWidth = \"50%\";\n                // 1 column\n                if(width < 576) columnWidth = \"100%\";\n\n                return (\n                    <StackGrid\n                        columnWidth={columnWidth}\n                        gutterWidth={80}\n                        gutterHeight={80}\n                    >\n                        { children }\n                    </StackGrid>\n                );\n            }}\n        </SizeMe>\n    );\n}","import React, { useState } from 'react';\nimport projectsList from '../ProjectList';\nimport { Card } from 'react-bootstrap';\nimport Project from '../components/views/Project';\nimport tw, { styled } from \"twin.macro\";\nimport AnimatedGrid from '../components/views/AnimatedGrid';\nimport Section from '../components/views/Section';\n\nconst Container = styled(Section)`\n    background-color: lightgreen;\n    padding: 60px 20vw;\n`;\n\nconst Header = styled.h1`\n    ${tw`text-center mb-8 font-bold`}\n`;\n\nconst ProjectDisplay = styled(Card)`\n    box-shadow: 3px 4px 8px 2px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    ${tw`w-full h-full cursor-pointer`}\n`;\n\nconst ProjectImage = styled(Card.Img)`\n    height: 275px;\n    ${tw`w-full`}\n`;\n\nexport default function Portfolio({ ...props }) {\n    const [clickedProject, setClickedProject] = useState(null);\n\n    return (\n        <Container {...props}>\n            <Header>Portfolio</Header>\n\n            <AnimatedGrid>\n                {\n                    projectsList.map((project, index) => {\n                        const { imgName, name } = project;\n                        return (\n                            <ProjectDisplay \n                                key={index}\n                                onClick={() => setClickedProject({ open: true, ...project})}\n                            >\n                                <ProjectImage src={`images/${imgName}`}/>      \n                                <Card.Body tw=\"text-center\">   \n                                    <Card.Title tw=\"m-0\">{name}</Card.Title>  \n                                </Card.Body>    \n                            </ProjectDisplay>\n                        );\n                    })\n                }\n            </AnimatedGrid>\n\n            { \n                clickedProject &&\n                    <Project project={clickedProject} />\n            }\n        </Container>\n    );   \n}","import React from 'react';\nimport tw, { styled } from \"twin.macro\";\nimport NewTabLink from '../components/views/NewTabLink';\nimport Section from '../components/views/Section';\nimport { linkedinUrl } from '../global';\n\nconst Container = styled(Section)`\n    background-color: #111134;\n    padding: 45vh 10vw;\n    ${tw`text-white`}\n`;\n\nconst Header = styled.h1`\n    ${tw`text-center mb-8 font-bold`}\n`;\n\nconst Description = styled.div`\n    max-width: 700px;\n    ${tw`text-xl m-auto`}\n`;\n\nexport default function Contact({ ...props }) {\n    return(\n        <Container {...props}>\n            <Header>Contact Me</Header>\n            <Description>\n                You can reach out to me on <NewTabLink href={linkedinUrl}>LinkedIn</NewTabLink> or email me at hua.dylan@gmail.com\n            </Description>\n        </Container>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport \"./index.scss\";\nimport Navbar from './components/Navbar';\nimport About from './sections/About';\nimport Portfolio from './sections/Portfolio';\nimport Contact from './sections/Contact';\nimport { ScrollingProvider } from 'react-scroll-section';\n\nfunction App() {\n    return (\n        <ScrollingProvider>\n            <Navbar />\n            <main>\n                <About id=\"about\" />\n                <Portfolio id=\"portfolio\" />\n                <Contact id=\"contact\" />\n            </main>\n        </ScrollingProvider>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}